config {
  type: "incremental",
  schema: "conecta",
  name: "viagem_informada_monitoramento_conecta",
  tags: ["monitoramento_viagem"],
  bigquery: {
    partitionBy: "data"
  }
}

pre_operations {
  DECLARE gtfs_feeds ARRAY<DATE>;

  SET gtfs_feeds = (
    SELECT ARRAY_AGG(feed_start_date)
    FROM (
      SELECT DISTINCT feed_start_date
      FROM ${ref("calendario")}
      ${when(
        incremental(),
        `WHERE data BETWEEN DATE(${constants.date_range_start}) AND DATE(${constants.date_range_end})`
      )}
    )
  );
}

with
    staging_rioonibus as (
        select
            id_viagem,
            date(parse_timestamp('%Y-%m-%d', safe_cast(data_viagem as string))) as data_viagem,
            datetime(parse_timestamp('%Y-%m-%d %H:%M:%S%z', safe_cast(datetime_chegada as string))) as datetime_chegada,
            datetime(parse_timestamp('%Y-%m-%d %H:%M:%S%z', safe_cast(datetime_partida as string))) as datetime_partida,
            datetime(parse_timestamp('%Y-%m-%d %H:%M:%S%z', safe_cast(datetime_processamento as string))) as datetime_processamento,
            fornecedor,
            id_veiculo,
            route_id,
            sentido,
            servico,
            shape_id,
            safe_cast(trip_id AS INT64) as trip_id
        from ${ref("api_conecta")}
        ${when(
            incremental(),
            `where data_viagem between date(${constants.date_range_start}) and date(${constants.date_range_end})`
        )}
 
    ),
    staging as (
        select
            data_viagem as data,
            id_viagem,
            datetime_partida,
            datetime_chegada,
            id_veiculo,
            trip_id,
            route_id,
            shape_id,
            servico,
            case
                when sentido = 'I'
                then 'Ida'
                when sentido = 'V'
                then 'Volta'
                when sentido = 'C'
                then 'Circular'
                else sentido
            end as sentido,
            fornecedor as fonte_gps,
            datetime_processamento,
        from staging_rioonibus
    ),
    calendario as (
        select *
        from ${ref("calendario")}
        ${when(
            incremental(),
            `where data between date(${constants.date_range_start}) and date(${constants.date_range_end})`
        )}
    ),
    routes as (
        select *
        from ${ref("routes")}
        ${when(
            incremental(),
            `where feed_start_date in UNNEST(gtfs_feeds)`
        )}
    ),
    viagem_modo as (
        select
            data,
            v.id_viagem,
            v.datetime_partida,
            v.datetime_chegada,
            case
                when r.route_type = '700'
                then 'Ã”nibus SPPO'
            end as modo,
            v.id_veiculo,
            v.trip_id,
            v.route_id,
            v.shape_id,
            v.servico,
            v.sentido,
            v.fonte_gps,
            v.datetime_processamento        
        from staging v
        join calendario c using (data)
        left join routes r using (route_id, feed_start_date, feed_version)
    )
select
    *,
    ${constants.versao} as versao,
    current_datetime("America/Sao_Paulo") as datetime_ultima_atualizacao
from viagem_modo