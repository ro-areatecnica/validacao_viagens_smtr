config {
  type: "incremental",
  schema: "monitoramento",
  name: "viagem_validacao",
  tags: ["raw_viagem", "monitoramento_viagem"],
  bigquery: {
    partitionBy: "data"
  }
}

pre_operations {
  DECLARE gtfs_feeds ARRAY<DATE>;

  SET gtfs_feeds = (
    SELECT ARRAY_AGG(feed_start_date)
    FROM (
      SELECT DISTINCT feed_start_date
      FROM ${ref("planejamento", "calendario")}
      ${when(
        incremental(),
        `WHERE data BETWEEN DATE(${constants.date_range_start}) AND DATE(${constants.date_range_end})`
      )}
    )
  );
}

with
    contagem as (
        select
            data,
            id_viagem,
            datetime_partida,
            datetime_chegada,
            modo,
            id_veiculo,
            trip_id,
            route_id,
            shape_id,
            servico,
            sentido,
            count(*) as quantidade_segmentos_verificados,
            countif(quantidade_gps > 0) as quantidade_segmentos_validos,
            service_ids,
            tipo_dia,
            feed_version,
            feed_start_date
        from ${ref("gps_segmento_viagem")}
        where
            not indicador_segmento_desconsiderado
            ${when(
                incremental(),
                `AND data BETWEEN DATE(${constants.date_range_start}) AND DATE(${constants.date_range_end})`
            )}
        group by
            data,
            id_viagem,
            datetime_partida,
            datetime_chegada,
            modo,
            id_veiculo,
            trip_id,
            route_id,
            shape_id,
            servico,
            sentido,
            service_ids,
            tipo_dia,
            feed_version,
            feed_start_date
    ),
    indice as (
        select
            data,
            id_viagem,
            datetime_partida,
            datetime_chegada,
            modo,
            id_veiculo,
            trip_id,
            route_id,
            shape_id,
            servico,
            sentido,
            quantidade_segmentos_verificados,
            quantidade_segmentos_validos,
            quantidade_segmentos_validos
            / quantidade_segmentos_verificados as indice_validacao,
            service_ids,
            tipo_dia,
            feed_version,
            feed_start_date
        from contagem
    ),
    trips as (
        select distinct
            feed_start_date,
            feed_version,
            route_id,
            array_agg(service_id) as service_ids,
        from ${ref("trips")}
        ${when(
            incremental(),
            `where feed_start_date in UNNEST(gtfs_feeds)`
        )}
        group by 1, 2, 3
    ),
    servicos_planejados as (
        select
            i.*,
            (
                select count(*)
                from unnest(i.service_ids) as service_id
                join unnest(t.service_ids) as service_id using (service_id)
            )
            > 0 as indicador_servico_planejado
        from indice i
        left join trips t using (feed_start_date, feed_version, route_id)
    )
select
    data,
    id_viagem,
    datetime_partida,
    datetime_chegada,
    modo,
    id_veiculo,
    trip_id,
    route_id,
    shape_id,
    servico,
    sentido,
    quantidade_segmentos_verificados,
    quantidade_segmentos_validos,
    indice_validacao,
    indice_validacao >= ${constants.parametro_validacao} as indicador_trajeto_valido,
    indicador_servico_planejado,
    indice_validacao >= ${constants.parametro_validacao}
    and indicador_servico_planejado as indicador_viagem_valida,
    ${constants.parametro_validacao} as parametro_validacao,
    tipo_dia,
    feed_version,
    feed_start_date,
    '' as versao,
    current_datetime("America/Sao_Paulo") as datetime_ultima_atualizacao
from servicos_planejados